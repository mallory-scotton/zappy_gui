///////////////////////////////////////////////////////////////////////////////
// Header guard
///////////////////////////////////////////////////////////////////////////////
#pragma once

///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include "Game/Player.hpp"
#include <vector>

///////////////////////////////////////////////////////////////////////////////
// Namespace Zappy
///////////////////////////////////////////////////////////////////////////////
namespace Zappy
{

///////////////////////////////////////////////////////////////////////////////
/// \brief
///
///////////////////////////////////////////////////////////////////////////////
class Team
{
private:
    ///////////////////////////////////////////////////////////////////////////
    // Public members
    ///////////////////////////////////////////////////////////////////////////
    std::string m_name;             //<! Team name
    std::vector<Player> m_players;  //<! Players in the team
    unsigned int m_deadPlayers;     //<! Number of dead players in the team

public:
    ///////////////////////////////////////////////////////////////////////////
    // Constructors
    ///////////////////////////////////////////////////////////////////////////
    Team(const std::string& name);

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief Gets the team name
    ///
    /// \return The team name
    ///
    ///////////////////////////////////////////////////////////////////////////
    const std::string& GetName(void) const;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief Adds a player to the team
    ///
    /// \param player The player to add
    ///
    ///////////////////////////////////////////////////////////////////////////
    void AddPlayer(const Player& player);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief Removes a player from the team
    ///
    /// \param player The player to remove
    ///
    ///////////////////////////////////////////////////////////////////////////
    void RemovePlayer(const Player& player);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief Gets the players in the team
    ///
    /// \return A reference to the vector of players
    ///
    ///////////////////////////////////////////////////////////////////////////
    const std::vector<Player>& GetPlayers(void) const;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief Gets the players in the team
    ///
    /// \return A reference to the vector of players
    ///
    ///////////////////////////////////////////////////////////////////////////
    std::vector<Player>& GetPlayers(void);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief Gets the number of living players in the team
    ///
    /// \return The number of living players in the team
    ///
    ///////////////////////////////////////////////////////////////////////////
    unsigned int GetLivingPlayers(void) const;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief Gets the number of dead players in the team
    ///
    /// \return The number of dead players in the team
    ///
    ///////////////////////////////////////////////////////////////////////////
    unsigned int GetDeadPlayersCount(void) const;
};

} // !namespace Zappy
